<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

    <!--注解扫描 扫描除了控制器之外的业务层，持久层等 扫描指定包以及子包下面的所有类中的注解，除@Controller-->
    <context:component-scan base-package="com.yj.resume" use-default-filters="false">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!-- 配置数据源 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close"
          scope="prototype">
        <property name="driverClassName" value="org.gjt.mm.mysql.Driver"/>
        <property name="username" value="root"/>
        <property name="password" value="980423"/>
        <property name="url" value="jdbc:mysql://localhost:3306/ztc?useUnicode=true&amp;characterEncoding=utf-8"/>
        <!-- 初始化大小 -->
        <property name="initialSize" value="5"/>
        <!-- 最小空闲连接条数 -->
        <property name="minIdle" value="10"/>
        <!-- 最大活动连接条数 -->
        <property name="maxActive" value="500"/>
        <!-- 连接超时(毫秒) -->
        <property name="maxWait" value="15000"/>
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>
        <!--  配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="true"/>
        <property name="testOnReturn" value="false"/>
        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="true"/>
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>
        <!-- 验证连接有效与否的SQL，不同的数据配置不同 -->
        <property name="validationQuery" value="select 1"/>
        <property name="filters" value="stat"/>
    </bean>
    <!-- 通过MyBatis-plugin配置SqlSessionFactory -->
    <bean id="sqlSessionFactory" class="com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!-- 配置实体类扫描的包 -->
        <property name="typeAliasesPackage" value="com.yj.resume.vo"/>
        <!-- 配置SQL-Mapper xml文件(注意:value中通配xml文件，所以不能有不相关Mapper的xml文件) -->
        <property name="mapperLocations">
            <value>classpath:com/yj/resume/mapper/*.xml</value>
        </property>
    </bean>
    <!-- 配置Mapper接口 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.yj.resume.mapper"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>
    <!-- 配置Spring事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!-- 配置jdbcTemplate -->
    <bean id="jdbcTemplate" name="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!-- 开启Spring注式事务 -->
    <tx:annotation-driven transaction-manager="transactionManager"></tx:annotation-driven>
    <!-- 开启Spring注解 -->
    <context:annotation-config></context:annotation-config>
    <context:component-scan base-package="com.yj.resume.dao"/>
    <context:component-scan base-package="com.yj.resume.service"/>
</beans>